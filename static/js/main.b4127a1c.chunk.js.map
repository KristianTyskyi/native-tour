{"version":3,"sources":["components/map/MapAPI.js","components/map/MapboxComponent.js","components/map/MapComponent.js","components/about/AboutComponent.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","response","json","MapboxComponent","props","state","viewport","width","height","latitude","longitude","zoom","mapStyle","selectedLocation","this","onViewportChange","setState","locations","map","location","key","coords","className","onClick","e","preventDefault","src","alt","onClose","image","title","description","Component","MapComponent","getLocations","MapAPI","data","AboutComponent","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSACe,aACW,OAAD,0HACMA,MAAM,kBADZ,cACXC,EADW,yBAEVA,EAASC,QAFC,8C,gBC6DVC,G,8DAzDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAU,CACNC,MAAO,QACPC,OAAQ,QACRC,SAAU,QACVC,UAAW,QACXC,KAAM,GAEVC,SAAU,oCACVC,iBAAkB,MAXP,E,qDAeT,IAAD,OACL,OAAO,eAAC,IAAD,yBACHD,SAAUE,KAAKT,MAAMO,UACjBE,KAAKT,MAAMC,UAFZ,IAGHS,iBAAkB,SAACT,GAAD,OAAc,EAAKU,SAAS,CAACV,cAH5C,UAKFQ,KAAKV,MAAMa,UAAUC,KAAI,SAACC,EAAUC,GAAX,OACtB,cAAC,IAAD,CAEIX,SAAUU,EAASE,OAAOZ,SAC1BC,UAAWS,EAASE,OAAOX,UAH/B,SAKI,wBACIY,UAAU,aACVC,QAAS,SAAAC,GACLA,EAAEC,iBACF,EAAKT,SAAS,CAACH,iBAAkBM,KAJzC,SAOI,qBAAKO,IAAI,aAAaC,IAAI,qBAXzBP,MAeZN,KAAKT,MAAMQ,iBACR,cAAC,IAAD,CACIJ,SAAUK,KAAKT,MAAMQ,iBAAiBQ,OAAOZ,SAC7CC,UAAWI,KAAKT,MAAMQ,iBAAiBQ,OAAOX,UAC9CkB,QAAS,WACL,EAAKZ,SAAS,CAACH,iBAAkB,QAJzC,SAOI,sBAAKS,UAAU,iBAAf,UACI,qBAAKI,IAAK,UAAUZ,KAAKT,MAAMQ,iBAAiBgB,MAAOF,IAAKb,KAAKT,MAAMQ,iBAAiBiB,QACxF,6BAAKhB,KAAKT,MAAMQ,iBAAiBiB,QACjC,4BAAIhB,KAAKT,MAAMQ,iBAAiBkB,mBAGxC,a,GArDcC,cCqBfC,E,kDArBX,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTY,UAAW,IAHA,E,gEAQfH,KAAKoB,iB,qKAImBC,I,OAAlBlB,E,OACNH,KAAKE,SAAS,CAAEC,UAAWA,EAAUmB,O,qIAIrC,OAAO,cAAC,EAAD,CAAiBnB,UAAWH,KAAKT,MAAMY,gB,GAlB3Be,aCIZK,E,uKAJP,OAAO,iD,GAFcL,a,uBCyBdM,MAjBf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACI,cAAC,IAAD,CAAYiB,SAAS,IAArB,SACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACI,cAAC,EAAD,cCPHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4127a1c.chunk.js","sourcesContent":["\nexport default {\n    async getLocations() {\n        const response = await fetch('locations.json');\n        return response.json();\n    }\n}\n","import React, { Component } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './Mapbox.css';\n\nclass MapboxComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewport: {\n                width: '100vw',\n                height: '100vh',\n                latitude: 50.7472,\n                longitude: 25.3254,\n                zoom: 7,\n            },\n            mapStyle: 'mapbox://styles/mapbox/streets-v9',\n            selectedLocation: null\n        };\n    }\n\n    render() {\n        return <ReactMapGL\n            mapStyle={this.state.mapStyle}\n            {...this.state.viewport}\n            onViewportChange={(viewport) => this.setState({viewport})}\n        >\n            {this.props.locations.map((location, key) => (\n                <Marker\n                    key={key}\n                    latitude={location.coords.latitude}\n                    longitude={location.coords.longitude}\n                >\n                    <button\n                        className=\"marker-btn\"\n                        onClick={e => {\n                            e.preventDefault();\n                            this.setState({selectedLocation: location});\n                        }}\n                    >\n                        <img src=\"marker.svg\" alt=\"Location Icon\" />\n                    </button>\n                </Marker>\n            ))}\n            {this.state.selectedLocation ? (\n                <Popup\n                    latitude={this.state.selectedLocation.coords.latitude}\n                    longitude={this.state.selectedLocation.coords.longitude}\n                    onClose={() => {\n                        this.setState({selectedLocation: null});\n                    }}\n                >\n                    <div className=\"location-popup\">\n                        <img src={'places/'+this.state.selectedLocation.image} alt={this.state.selectedLocation.title} />\n                        <h2>{this.state.selectedLocation.title}</h2>\n                        <p>{this.state.selectedLocation.description}</p>\n                    </div>\n                </Popup>\n            ) : null}\n        </ReactMapGL>;\n    }\n}\n\nexport default MapboxComponent;\n","import React, { Component } from 'react';\nimport MapAPI from './MapAPI';\nimport MapboxComponent from './MapboxComponent';\n\nclass MapComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locations: []\n        };\n    }\n\n    componentDidMount() {\n        this.getLocations();\n    }\n      \n    async getLocations() {\n        const locations = await MapAPI.getLocations();\n        this.setState({ locations: locations.data });\n    }\n\n    render() {\n        return <MapboxComponent locations={this.state.locations}/>;\n    }\n}\n\nexport default MapComponent;\n","import React, { Component } from 'react';\n\nclass AboutComponent extends Component {\n    render() {\n        return <div>About Page</div>;\n    }\n}\n\nexport default AboutComponent;\n","import MapComponent from 'components/map/MapComponent';\nimport AboutComponent from 'components/about/AboutComponent';\nimport 'App.css';\n\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HashRouter basename='/'>\n            <Switch>\n              <Route exact path=\"/\">\n                  <MapComponent />\n              </Route>\n              <Route path=\"/about\">\n                  <AboutComponent />\n              </Route>\n            </Switch>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}